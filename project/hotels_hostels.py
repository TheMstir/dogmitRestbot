import datetime

from config import hotels_token
import requests

url_base = "https://hotels4.p.rapidapi.com/locations/v3/search"
url_list = "https://hotels4.p.rapidapi.com/properties/v2/list"
url_data = "https://hotels4.p.rapidapi.com/properties/v2/detail"
headers = hotels_token


def get_hotels_box(city: str, count_place: int, count_photo: int, flag: str, date_in: str, date_out: str) -> list:
    list_view = [[f'üê∂–ê –≤–æ—Ç –∏ —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–∏–Ω–∏—Ü –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –≤: {city}'], ]
    little_photo_list = []
    year_in, mounth_in, day_in = str(date_in).split('-')
    year_out, mounth_out, day_out = str(date_out).split('-')
    year_in = int(year_in)
    mounth_in = int(mounth_in)
    day_in = int(day_in)
    year_out = int(year_out)
    mounth_out = int(mounth_out)
    day_out = int(day_out)

    #  c–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º ID –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –º–µ—Ç–∫–∏ –≤ –±–∞–∑–µ, –±–æ–ª–µ–µ-–º–µ–Ω–µ–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞—à–µ–ª —Ç–æ–ª—å–∫–æ —Ç—É—Ç
    try:
        querystring = {"q": f"{city}", "locale": "en_US"}  # locate –º–æ–∂–Ω–æ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ
        # –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç —è–∑—ã–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ
        response = requests.request("GET", url_base, headers=headers, params=querystring, timeout=10)
        data = response.json()

        try:
            gaiaid = data['sr'][0]['gaiaId']  # –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
        except:
            ex = ['–£–≤—ã, —Ç—É—Ç —è —Å–µ–π—á–∞—Å —Ä–∞–∑–Ω—é—Ö–∞—Ç—å –Ω–µ –º–æ–≥—É‚ùì\n–ö—Ç–æ-—Ç–æ –≤—Å–µ —Å–ø—Ä—è—Ç–∞–ª...üö∑\n'
                  '–ø–æ–π–¥–µ–º –≤ /help, —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–¥—É–º–∞–µ–ºüîô']
            list_view.append(ex)
            return list_view

        payload = {
            "currency": "USD",
            "eapid": 1,
            "locale": "en_US",
            "siteId": 300000001,
            "destination": {"regionId": f'{gaiaid}'},
            "checkInDate": {
                "day": day_in,
                "month": mounth_in,
                "year": year_in
            },
            "checkOutDate": {
                "day": day_out,
                "month": mounth_out,
                "year": year_out
            },
            "rooms": [
                {
                    "adults": 1
                }
            ],
            "resultsStartingIndex": 0,
            "resultsSize": 25,
            "sort": f"{flag}",
            "filters": {"price": {
                "max": 650,
                "min": 20
            }}
        }

        # –≤–æ–∑–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª–∏ —Å—É–º–º

        response_2 = requests.request("POST", url_list, json=payload, headers=headers)
        data_2 = response_2.json()
        for i in range(count_place):
            name = data_2['data']['propertySearch']['properties'][i]['name']
            hotel_id = data_2['data']['propertySearch']['properties'][i]['id']
            stars = data_2['data']['propertySearch']['properties'][i]['reviews']['score']
            coordinates_lat = data_2['data']['propertySearch']['properties'][i]['mapMarker']['latLong']['latitude']
            coordinates_lon = data_2['data']['propertySearch']['properties'][i]['mapMarker']['latLong']['longitude']
            dest_from_center = data_2['data']['propertySearch']['properties'][i]['destinationInfo']['distanceFromDestination']['value'] * 1.602
            for_one_night = \
                data_2['data']['propertySearch']['properties'][i]['price']['displayMessages'][0]['lineItems'][0]['price']['formatted']
            #  –í–æ–∑–º–æ–∂–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ–º–Ω–æ–∂–∏—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ,
            for_all_night = \
                data_2['data']['propertySearch']['properties'][i]['price']['displayMessages'][1]['lineItems'][0]['value']

            #  —Å–¥–µ–ª–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –Ω–∞—á–∞–ª–æ –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 3—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö


            payload = {
                "currency": "USD",
                "eapid": 1,
                "locale": "en_US",
                "siteId": 300000001,
                "propertyId": f"{hotel_id}"
            }

            response_3 = requests.request("POST", url_data, json=payload, headers=headers)
            data_3 = response_3.json()
            address = data_3['data']['propertyInfo']['summary']['location']['address']['addressLine']
            tag = data_3['data']['propertyInfo']['summary']['tagline']

            for j in range(count_photo):
                photo = data_3['data']['propertyInfo']['propertyGallery']['images'][j]['image']['url']
                little_photo_list.append(photo)

            mess = f"–û—Ç–µ–ª—å <b>{name}</b>, —Å –æ—Ü–µ–Ω–∫–æ–π –≤ {stars}‚≠ê,\n" \
                   f"–û–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫: {tag}\n" \
                   f"C—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞üí≤ –∑–∞ —Å—É—Ç–∫–∏: {for_one_night}, –∞ –∑–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π –≤–∞–º–∏ —Å—Ä–æ–∫, —Å–æ " \
                   f"–≤—Å–µ–º–∏ –Ω–∞–ª–æ–≥–∞–º–∏ –±—É–¥–µ—Ç: {for_all_night} üí∞\n" \
                   f"üåé–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω {coordinates_lat}, {coordinates_lon}\n" \
                   f"üó∫Ô∏è–¢–æ –µ—Å—Ç—å –ø–æ –∞–¥—Ä–µ—Å—É: {address}\n" \
                   f"–ß—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ {int(dest_from_center)}–∫–º.\n –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –≥–æ—Ä–æ–¥–∞ üè¨\n" \
                   f"üè¢–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ø–æ —Å—Å—ã–ª–∫–µ:  " \
                   f"üåê https://www.hotels.com/h{hotel_id}.Hotel-Information" \
                #  –æ—Å—Ç–∞–≤–∏–ª –º–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏ —á—Ç–æ–±—ã –≤—ã—Ç–∞—â–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±—É–∫–≤ —Ä–µ–≥—É–ª—è—Ä–∫–∞–º–∏ –∏ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ —Ä–µ–∑–∞—Ç—å

            if count_photo == 0:
                list_view.append([mess])

            if count_photo > 0:
                list_view.append([mess, little_photo_list])
                little_photo_list = []  # –æ—á–∏—â–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ —á—Ç–æ–±—ã –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –Ω–µ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —Ñ–æ—Ç–∫–∏ –≤ –¥–æ–ø—ã

        return list_view

    except Exception as exeption:
        print(exeption)
        mess = '–í—É—Ñ! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —É–∂–µ –ø—ã—Ç–∞—é—Å—å —Ä–µ—à–∏—Ç—å...\nüê∂ –Ω–æ —É –º–µ–Ω—è –∂–µ –ª–∞–ø–∫–∏\n–ö—Ç–æ-—Ç–æ –≤—Å–µ —Å–ø—Ä—è—Ç–∞–ª...üö∑\n' \
               '–ø–æ–π–¥–µ–º –≤ /help, —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–¥—É–º–∞–µ–ºüîô'
        list_view.append(mess)
        return list_view

# –§—É–Ω–∫—Ü–∏—è —Å —Ü–∏–∫–ª–æ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–∞–¥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–π
# –ï—Å–ª–∏ —Ñ–æ—Ç–æ —Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫–∞—á–∞—Ç—å
