from config import hotels_token
import requests
import pprint
import datetime

url_base = "https://hotels4.p.rapidapi.com/locations/v3/search"
url_list = "https://hotels4.p.rapidapi.com/properties/v2/list"
url_data = "https://hotels4.p.rapidapi.com/properties/v2/detail"
headers = hotels_token


def get_hotels_box(city, count_place, count_photo, flag):
    print(city, count_place, count_photo)
    list_view = [[f'üê∂–ê –≤–æ—Ç –∏ —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–∏–Ω–∏—Ü –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –≤: {city}'], ]
    little_photo_list = []

    # c–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º ID –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –º–µ—Ç–∫–∏ –≤ –±–∞–∑–µ, –±–æ–ª–µ–µ-–º–µ–Ω–µ–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞—à–µ–ª —Ç–æ–ª—å–∫–æ —Ç—É—Ç
    try:
        querystring = {"q": f"{city}", "locale": "ru_RU"}  # locate –º–æ–∂–Ω–æ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ
        # –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç —è–∑—ã–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ
        response = requests.request("GET", url_base, headers=headers, params=querystring, timeout=10)
        data = response.json()

        try:
            gaiaid = data['sr'][0]['gaiaId'] #  –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
            print(gaiaid)
        except:
            ex = ['–£–≤—ã, —Ç—É—Ç —è —Å–µ–π—á–∞—Å —Ä–∞–∑–Ω—é—Ö–∞—Ç—å –Ω–µ –º–æ–≥—É‚ùì\n–ö—Ç–æ-—Ç–æ –≤—Å–µ —Å–ø—Ä—è—Ç–∞–ª...üö∑\n'
            '–ø–æ–π–¥–µ–º –≤ /help, —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–¥—É–º–∞–µ–ºüîô']
            list_view.append(ex)
            return list_view

        #with open('listi.txt', 'a', encoding='utf-8') as file:

        payload = {
            "currency": "USD",
            "eapid": 1,
            "locale": "en_EN",
            "siteId": 300000001,
            "destination": {"regionId": f'{gaiaid}'},
            "checkInDate": {
                "day": 10,
                "month": 10,
                "year": 2022
            },
            "checkOutDate": {
                "day": 11,
                "month": 10,
                "year": 2022
            },
            "rooms": [
                {
                    "adults": 1
                }
            ],
            "resultsStartingIndex": 0,
            "resultsSize": 25,
            "sort": f"{flag}",
            "filters": {"price": {
                "max": 200,
                "min": 20
            }}
        }

        response_2 = requests.request("POST", url_list, json=payload, headers=headers)
        data_2 = response_2.json()
        for i in range(count_place):
            print('a')
            name = data_2['data']['propertySearch']['properties'][i]['name']
            hotel_id = data_2['data']['propertySearch']['properties'][i]['id']
            stars = data_2['data']['propertySearch']['properties'][i]['reviews']['score']
            url_photo = data_2['data']['propertySearch']['properties'][i]['propertyImage']['image']['url']
            price = data_2['data']['propertySearch']['properties'][i]['mapMarker']['label']
            coordinates_lat = data_2['data']['propertySearch']['properties'][i]['mapMarker']['latLong']['latitude']
            coordinates_lon = data_2['data']['propertySearch']['properties'][i]['mapMarker']['latLong']['longitude']
            print('b')

            payload = {
                "currency": "USD",
                "eapid": 1,
                "locale": "en_US",
                "siteId": 300000001,
                "propertyId": f"{hotel_id}"
            }

            response_3 = requests.request("POST", url_data, json=payload, headers=headers)
            data_3 = response_3.json()
            address = data_3['data']['propertyInfo']['summary']['location']['address']['addressLine']
            tag = data_3['data']['propertyInfo']['summary']['tagline']
            for j in range(count_photo):
                photo = data_3['data']['propertyInfo']['propertyGallery']['images'][j]['image']['url']
                little_photo_list.append(photo)

            mess = f"–û—Ç–µ–ª—å <b>{name}</b>, —Å –æ—Ü–µ–Ω–∫–æ–π –≤ {stars}‚≠ê," \
                   f"\n–û–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫: {tag}\nüí≤C—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ —Å—É—Ç–∫–∏: {price}\n" \
                   f"üåé–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω {coordinates_lat}, {coordinates_lon}\n" \
                   f"üó∫Ô∏è–¢–æ –µ—Å—Ç—å –ø–æ –∞–¥—Ä–µ—Å—É: {address}" \
                   f"üè¢–ï—Å–ª–∏ –±—É–¥–µ—Ç–µ –∏—Å–∫–∞—Ç—å —Ç–æ —Å–º–æ—Ç—Ä–∏—Ç–µ —Ç–∞–∫–æ–µ –∑–¥–∞–Ω–∏–µ: {url_photo}"

            if count_photo == 0:
                list_view.append([mess])

            if count_photo > 0:
                list_view.append([(mess, little_photo_list)])
                print(list_view)

        return list_view


    except Exception as exeption:
        print(exeption)
        mess = '–í—É—Ñ! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —É–∂–µ –ø—ã—Ç–∞—é—Å—å —Ä–µ—à–∏—Ç—å...\nüê∂ –Ω–æ —É –º–µ–Ω—è –∂–µ –ª–∞–ø–∫–∏\n–ö—Ç–æ-—Ç–æ –≤—Å–µ —Å–ø—Ä—è—Ç–∞–ª...üö∑\n' \
               '–ø–æ–π–¥–µ–º –≤ /help, —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–¥—É–º–∞–µ–ºüîô'
        list_view.append(mess)
        return list_view

    # –¥–æ–ø–æ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–∞–∏–ª –≥–¥–µ –≤—Å–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω–æ


def get_photos_from_url(id, count, hotel):
    querystring = {"id": f"{id}"}
    response = requests.request("GET", url_photos, headers=headers, params=querystring)
    #    photos_list_now = hotel
    #for in range ()

    pass
    return


# –§—É–Ω–∫—Ü–∏—è —Å —Ü–∏–∫–ª–æ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–∞–¥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–π
# –ï—Å–ª–∏ —Ñ–æ—Ç–æ —Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫–∞—á–∞—Ç—å

